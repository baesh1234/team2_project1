{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'Section4',\n  data() {\n    return {\n      //section4\n      userEmail: '',\n      userMessage: '',\n      emailVerified: false,\n      s4_usermemo: '',\n      // 이미지 선택기 표시 여부\n      showImageSelector: false,\n      // 선택된 이미지 파일명\n      selectedImage: null,\n      // 선택한 이미지 파일명\n      images: [\"s4_arona_raund.png\", \"s4_mika.png\", \"s4_toki.png\"],\n      // 응원 메시지 및 등록 날짜 및 시간\n      // 이전에는 하나의 응원 메시지만 표시했지만 이제는 여러 메시지를 저장할 배열을 만듭니다.\n      cheerMessages: [],\n      // 이전 코드에서는 선택된 이미지를 저장하는 selectedImage 변수를 사용했습니다.\n      // 이제는 이미지와 메시지를 함께 저장하는 객체를 사용합니다.\n      selectedCheerMessage: null,\n      // 다음 메시지를 위한 입력 필드를 초기화하는 플래그\n      clearInputField: false,\n      registrationDateTime: ''\n    };\n  },\n  methods: {\n    /***Section4 function***/\n    async fetchImages() {\n      try {\n        const response = await fetch('/images/list');\n        const images = await response.json();\n        this.images = images;\n      } catch (error) {\n        console.error('이미지를 불러오는데 실패했습니다.', error);\n      }\n    },\n    // 한 줄평 등록 버튼 클릭 시\n    s4_btn() {\n      if (this.s4_usermemo) {\n        // 응원 메시지가 정상적으로 입력되었는지 검사합니다.\n        this.submitMessage(); // 응원 메시지 등록 처리\n      } else {\n        // 응원 메시지가 입력되지 않은 경우 에러 메시지 출력\n        Swal.fire({\n          text: '한 줄평을 입력해주세요.',\n          icon: 'error',\n          timer: 2000\n        });\n      }\n    },\n    // 이메일 인증 버튼\n    s4_emailBtn() {\n      this.emailVerified = true;\n      this.showEmailMessage();\n    },\n    // 응원 메시지 입력 후 등록 날짜 설정\n    setRegistrationDateTime() {\n      this.registrationDateTime = new Date().toLocaleString();\n    },\n    // 응원 메시지 등록 처리 메서드\n    async submitMessage() {\n      // 이미지 선택 여부 확인\n      if (!this.selectedImage) {\n        // 이미지가 선택되지 않은 경우 기본 이미지를 설정합니다.\n        this.selectedImage = \"s4_default_image.png\"; // 기본 이미지 파일명으로 설정\n      }\n\n      // 이메일이 인증되었는지 확인\n      if (!this.emailVerified) {\n        // 이메일이 인증되지 않은 경우\n        console.error('이메일 인증이 완료되지 않았습니다.');\n        Swal.fire({\n          text: '이메일 인증이 완료되어야 합니다.',\n          icon: 'error',\n          timer: 2000\n        });\n        return; // 함수 종료\n      }\n\n      // 이메일과 메시지가 입력되었는지 확인\n      if (!this.userEmail || !this.s4_usermemo) {\n        console.error('이메일과 메시지를 입력해야 합니다.');\n        Swal.fire({\n          text: '이메일과 메시지를 입력해야 합니다.',\n          icon: 'error',\n          timer: 2000\n        });\n        return; // 함수 종료\n      }\n\n      // 모든 조건이 충족되었을 때 실행되는 부분\n      // 서버 요청 대신에 콘솔에 응원 메시지 출력\n      console.log('User Email:', this.userEmail);\n      console.log('User Message:', this.s4_usermemo);\n      this.setRegistrationDateTime(); // 등록 날짜 및 시간 설정\n      console.log('Registration Date Time:', this.registrationDateTime);\n      this.cheerMessages.push({\n        message: this.s4_usermemo,\n        image: this.selectedImage,\n        registrationDateTime: this.registrationDateTime // 등록된 날짜를 사용합니다.\n      });\n      // 입력 필드를 초기화합니다.\n      this.s4_usermemo = '';\n      this.clearInputField = true;\n      // 등록된 응원 메시지를 표시합니다.\n      this.showCheerMessages();\n    },\n    // ...\n    // 등록된 응원 메시지를 표시하는 메서드\n    showCheerMessages() {\n      // 입력 필드가 초기화되면서 새로운 응원 메시지가 추가되었으므로 스크롤을 가장 아래로 조정합니다.\n      this.scrollToBottom();\n    },\n    // 응원 메시지 입력 후 스크롤을 가장 아래로 조정하는 메서드\n    scrollToBottom() {\n      const cheerMsg = document.querySelector('.cheerMsg');\n      if (cheerMsg) {\n        cheerMsg.scrollTop = cheerMsg.scrollHeight;\n      }\n    },\n    // 응원 메시지 입력 후 SweetAlert 표시\n    showEmailMessage() {\n      Swal.fire({\n        text: '인증이 완료되었습니다.',\n        icon: 'success',\n        timer: 2000\n      }).then(() => {\n        // SweetAlert 알림이 사라진 후에 텍스트를 나타내도록 setTimeout 사용\n        setTimeout(() => {\n          const emailMsg = document.querySelector('.s4emailMsg');\n          emailMsg.style.display = 'block';\n        }, 100);\n      });\n    },\n    // 응원 메시지 팝업 표시\n    s4_cheerBtn() {\n      const letter = document.querySelector('#s4_letterPopup');\n      letter.style.display = 'block';\n    },\n    // 응원 메시지 팝업 닫기\n    toggleLetterX() {\n      const letter = document.querySelector('#s4_letterPopup');\n      letter.style.display = 'none';\n    },\n    // 응원 메시지 표시 후 스크롤을 가장 아래로 조정\n    showCheerMessage() {\n      const cheerMsg = document.querySelector('.s4_int');\n      cheerMsg.scrollTop = cheerMsg.scrollHeight;\n    },\n    // 이미지 선택기 토글 메서드\n    toggleImageSelector() {\n      this.showImageSelector = !this.showImageSelector;\n    },\n    // 이미지 선택 시 호출되는 메서드\n    selectImage(selectedImage) {\n      console.log('선택된 이미지:', selectedImage);\n      this.selectedImage = selectedImage;\n      // 이미지 크기 조정 로직을 이미지 선택기를 닫기 전에 호출\n      this.adjustImageSelectorSize(selectedImage);\n      this.showImageSelector = false; // 이미지를 선택하면 선택기를 닫습니다.\n\n      // 이미지를 선택한 후 해당 이미지를 화면에 반영하기 위해\n      // .s4_raund 클래스를 가진 요소에 선택된 이미지를 바인딩합니다.\n      const imageElement = document.querySelector('.s4_raund');\n      if (imageElement) {\n        imageElement.src = require(`../assets/images/${selectedImage}`);\n      }\n    },\n    // 이미지 선택기의 크기를 조정하는 새로운 메서드\n    adjustImageSelectorSize(selectedImage) {\n      const img = new Image();\n      img.src = require(`../assets/images/${selectedImage}`);\n      img.onload = () => {\n        const imageSelector = document.querySelector('.imageSelector');\n        if (!imageSelector) {\n          console.error('.imageSelector 요소를 찾을 수 없습니다.');\n          return;\n        }\n        imageSelector.style.width = img.width + 'px';\n        imageSelector.style.height = img.height + 'px';\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEmail","userMessage","emailVerified","s4_usermemo","showImageSelector","selectedImage","images","cheerMessages","selectedCheerMessage","clearInputField","registrationDateTime","methods","fetchImages","response","fetch","json","error","console","s4_btn","submitMessage","Swal","fire","text","icon","timer","s4_emailBtn","showEmailMessage","setRegistrationDateTime","Date","toLocaleString","log","push","message","image","showCheerMessages","scrollToBottom","cheerMsg","document","querySelector","scrollTop","scrollHeight","then","setTimeout","emailMsg","style","display","s4_cheerBtn","letter","toggleLetterX","showCheerMessage","toggleImageSelector","selectImage","adjustImageSelectorSize","imageElement","src","require","img","Image","onload","imageSelector","width","height"],"sources":["C:\\git\\teamproject1\\vue-app\\src\\components\\Section4.vue"],"sourcesContent":["<template>\r\n  <div class=\"section s4\">\r\n    <div>\r\n      <img src=\"../assets/images/section4_arona_final.png\" class=\"s4_board\">\r\n      <input type=\"text\" class=\"s4_int2\" placeholder=\"사전예약한 이메일을 입력해주세요\" v-model=\"userEmail\" maxlength=\"50\" />\r\n      <img src=\"../assets/images/s4_btn.png\" class=\"s4_btn\" @click=\"s4_btn\">\r\n      <img src=\"../assets/images/s4_emailBtn.png\" class=\"s4_emailBtn\" @click=\"s4_emailBtn\">\r\n      <p class=\"s4emailMsg\">인증이 완료되었습니다.</p>\r\n      <img src=\"../assets/images/s4_arona_raund.png\" class=\"s4_raund\">\r\n      <div class=\"s4_triangleMenu\" @click=\"toggleImageSelector\"></div> <!-- 역삼각형 메뉴 추가 -->\r\n      <input type=\"text\" class=\"s4_int\" v-model=\"s4_usermemo\" placeholder=\"응원 메세지를 입력해주세요\" />\r\n      <!-- 응원 메시지가 등록된 경우에만 메시지를 표시합니다. -->\r\n      <!-- 응원 메시지가 등록된 경우에만 메시지를 표시합니다. -->\r\n      <p class=\"s4_message\" v-if=\"cheerMessage\">{{ cheerMessage.message }}</p>\r\n      <img class=\"s4_message-image\" v-if=\"cheerMessage\" :src=\"require(`../assets/images/${cheerMessage.image}`)\" :alt=\"cheerMessage.image\">\r\n      <img src=\"../assets/images/s4_cheerBtn.png\" class=\"s4_cheerBtn\" @click=\"s4_cheerBtn\">\r\n      <div v-show=\"showImageSelector\" class=\"imageSelector\">\r\n        <div v-for=\"(image, index) in images\" :key=\"index\" @click=\"selectImage(image)\">\r\n          <img :src=\"require(`../assets/images/${image}`)\" :alt=\"image\">\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div id=\"s4_letterPopup\">\r\n          <button id=\"s4_closeButton\" @click=\"toggleLetterX()\">X</button> <!-- 닫기 버튼 -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'Section4',\r\n  data() {\r\n    return {\r\n      //section4\r\n      userEmail: '',\r\n      userMessage: '',\r\n      emailVerified: false,\r\n      s4_usermemo: '',\r\n      // 이미지 선택기 표시 여부\r\n      showImageSelector: false,\r\n      // 선택된 이미지 파일명\r\n      selectedImage: null,\r\n      // 선택한 이미지 파일명\r\n      images: [\"s4_arona_raund.png\", \"s4_mika.png\", \"s4_toki.png\"],\r\n      // 응원 메시지 및 등록 날짜 및 시간\r\n      // 이전에는 하나의 응원 메시지만 표시했지만 이제는 여러 메시지를 저장할 배열을 만듭니다.\r\n      cheerMessages: [],\r\n      // 이전 코드에서는 선택된 이미지를 저장하는 selectedImage 변수를 사용했습니다.\r\n      // 이제는 이미지와 메시지를 함께 저장하는 객체를 사용합니다.\r\n      selectedCheerMessage: null,\r\n      // 다음 메시지를 위한 입력 필드를 초기화하는 플래그\r\n      clearInputField: false,\r\n      registrationDateTime: ''\r\n    };\r\n  },\r\n  methods: {\r\n    /***Section4 function***/\r\n    async fetchImages() {\r\n      try {\r\n        const response = await fetch('/images/list');\r\n        const images = await response.json();\r\n        this.images = images;\r\n      } catch (error) {\r\n        console.error('이미지를 불러오는데 실패했습니다.', error);\r\n      }\r\n    },\r\n    // 한 줄평 등록 버튼 클릭 시\r\n    s4_btn() {\r\n      if (this.s4_usermemo) { // 응원 메시지가 정상적으로 입력되었는지 검사합니다.\r\n        this.submitMessage(); // 응원 메시지 등록 처리\r\n      } else {\r\n        // 응원 메시지가 입력되지 않은 경우 에러 메시지 출력\r\n        Swal.fire({\r\n          text: '한 줄평을 입력해주세요.',\r\n          icon: 'error',\r\n          timer: 2000\r\n        });\r\n      }\r\n    },\r\n    // 이메일 인증 버튼\r\n    s4_emailBtn() {\r\n      this.emailVerified = true;\r\n      this.showEmailMessage();\r\n    },\r\n\r\n    // 응원 메시지 입력 후 등록 날짜 설정\r\n    setRegistrationDateTime() {\r\n      this.registrationDateTime = new Date().toLocaleString();\r\n    },\r\n    // 응원 메시지 등록 처리 메서드\r\n    async submitMessage() {\r\n\r\n      // 이미지 선택 여부 확인\r\n      if (!this.selectedImage) {\r\n        // 이미지가 선택되지 않은 경우 기본 이미지를 설정합니다.\r\n        this.selectedImage = \"s4_default_image.png\"; // 기본 이미지 파일명으로 설정\r\n      }\r\n\r\n      // 이메일이 인증되었는지 확인\r\n      if (!this.emailVerified) {\r\n        // 이메일이 인증되지 않은 경우\r\n        console.error('이메일 인증이 완료되지 않았습니다.');\r\n        Swal.fire({\r\n          text: '이메일 인증이 완료되어야 합니다.',\r\n          icon: 'error',\r\n          timer: 2000\r\n        });\r\n        return; // 함수 종료\r\n      }\r\n\r\n      // 이메일과 메시지가 입력되었는지 확인\r\n      if (!this.userEmail || !this.s4_usermemo) {\r\n        console.error('이메일과 메시지를 입력해야 합니다.');\r\n        Swal.fire({\r\n          text: '이메일과 메시지를 입력해야 합니다.',\r\n          icon: 'error',\r\n          timer: 2000\r\n        });\r\n        return; // 함수 종료\r\n      }\r\n\r\n      // 모든 조건이 충족되었을 때 실행되는 부분\r\n      // 서버 요청 대신에 콘솔에 응원 메시지 출력\r\n      console.log('User Email:', this.userEmail);\r\n      console.log('User Message:', this.s4_usermemo);\r\n      this.setRegistrationDateTime(); // 등록 날짜 및 시간 설정\r\n      console.log('Registration Date Time:', this.registrationDateTime);\r\n      this.cheerMessages.push({\r\n        message: this.s4_usermemo,\r\n        image: this.selectedImage,\r\n        registrationDateTime: this.registrationDateTime // 등록된 날짜를 사용합니다.\r\n      });\r\n      // 입력 필드를 초기화합니다.\r\n      this.s4_usermemo = '';\r\n      this.clearInputField = true;\r\n      // 등록된 응원 메시지를 표시합니다.\r\n      this.showCheerMessages();\r\n    },\r\n    // ...\r\n    // 등록된 응원 메시지를 표시하는 메서드\r\n    showCheerMessages() {\r\n      // 입력 필드가 초기화되면서 새로운 응원 메시지가 추가되었으므로 스크롤을 가장 아래로 조정합니다.\r\n      this.scrollToBottom();\r\n    },\r\n    // 응원 메시지 입력 후 스크롤을 가장 아래로 조정하는 메서드\r\n    scrollToBottom() {\r\n      const cheerMsg = document.querySelector('.cheerMsg');\r\n      if (cheerMsg) {\r\n        cheerMsg.scrollTop = cheerMsg.scrollHeight;\r\n      }\r\n    },\r\n\r\n    // 응원 메시지 입력 후 SweetAlert 표시\r\n    showEmailMessage() {\r\n      Swal.fire({\r\n        text: '인증이 완료되었습니다.',\r\n        icon: 'success',\r\n        timer: 2000\r\n      }).then(() => {\r\n        // SweetAlert 알림이 사라진 후에 텍스트를 나타내도록 setTimeout 사용\r\n        setTimeout(() => {\r\n          const emailMsg = document.querySelector('.s4emailMsg');\r\n          emailMsg.style.display = 'block';\r\n        }, 100);\r\n      });\r\n    },\r\n    // 응원 메시지 팝업 표시\r\n    s4_cheerBtn() {\r\n      const letter = document.querySelector('#s4_letterPopup');\r\n      letter.style.display = 'block';\r\n    },\r\n    // 응원 메시지 팝업 닫기\r\n    toggleLetterX() {\r\n      const letter = document.querySelector('#s4_letterPopup');\r\n      letter.style.display = 'none';\r\n    },\r\n    // 응원 메시지 표시 후 스크롤을 가장 아래로 조정\r\n    showCheerMessage() {\r\n      const cheerMsg = document.querySelector('.s4_int');\r\n      cheerMsg.scrollTop = cheerMsg.scrollHeight;\r\n    },\r\n    // 이미지 선택기 토글 메서드\r\n    toggleImageSelector() {\r\n      this.showImageSelector = !this.showImageSelector;\r\n    },\r\n    // 이미지 선택 시 호출되는 메서드\r\n    selectImage(selectedImage) {\r\n      console.log('선택된 이미지:', selectedImage);\r\n      this.selectedImage = selectedImage;\r\n      // 이미지 크기 조정 로직을 이미지 선택기를 닫기 전에 호출\r\n      this.adjustImageSelectorSize(selectedImage);\r\n      this.showImageSelector = false; // 이미지를 선택하면 선택기를 닫습니다.\r\n\r\n      // 이미지를 선택한 후 해당 이미지를 화면에 반영하기 위해\r\n      // .s4_raund 클래스를 가진 요소에 선택된 이미지를 바인딩합니다.\r\n      const imageElement = document.querySelector('.s4_raund');\r\n      if (imageElement) {\r\n        imageElement.src = require(`../assets/images/${selectedImage}`);\r\n      }\r\n    },\r\n    // 이미지 선택기의 크기를 조정하는 새로운 메서드\r\n    adjustImageSelectorSize(selectedImage) {\r\n      const img = new Image();\r\n      img.src = require(`../assets/images/${selectedImage}`);\r\n      img.onload = () => {\r\n        const imageSelector = document.querySelector('.imageSelector');\r\n        if (!imageSelector) {\r\n          console.error('.imageSelector 요소를 찾을 수 없습니다.');\r\n          return;\r\n        }\r\n        imageSelector.style.width = img.width + 'px';\r\n        imageSelector.style.height = img.height + 'px';\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n/*Section4*/\r\n\r\n.s4_board{\r\n  position: absolute;\r\n  width: 80%; /* 이미지의 너비를 부모 요소의 100%로 설정합니다. */\r\n  height: auto; /* 이미지의 높이를 자동으로 조정하여 비율을 유지합니다. */\r\n  top: 50px;\r\n  left: 100px;\r\n  object-fit: contain; /* 이미지가 요소에 맞게 확대되거나 축소되도록 설정합니다. */\r\n  border-radius: 3%;\r\n}\r\n\r\n.s4_int{\r\n  position: absolute;\r\n  width: 450px;\r\n  z-index: 2000;\r\n  bottom: 130px;\r\n  right: 340px;\r\n  height: 50px;\r\n  font-size: 15px;\r\n  border-radius: 25px; /* 보다 둥근 형태를 위해 반지름 값을 조정합니다. */\r\n  border: 2px solid #4A89C3; /* 테두리 스타일 및 색상을 지정합니다. */\r\n  padding: 0 15px; /* 입력 필드 내용과 테두리 사이의 여백을 조정합니다. */\r\n  outline: none; /* 포커스된 상태에서의 외곽선을 제거합니다. */\r\n}\r\n\r\n\r\n.s4_int2{\r\n  position: absolute;\r\n  width: 600px;\r\n  z-index: 1000;\r\n  top: 150px;\r\n  left: 245px;\r\n  height: 50px;\r\n  font-size: 15px;\r\n  border-radius: 25px; /* 보다 둥근 형태를 위해 반지름 값을 조정합니다. */\r\n  border: 2px solid #4A89C3; /* 테두리 스타일 및 색상을 지정합니다. */\r\n  padding: 0 15px; /* 입력 필드 내용과 테두리 사이의 여백을 조정합니다. */\r\n  outline: none; /* 포커스된 상태에서의 외곽선을 제거합니다. */\r\n\r\n}\r\n\r\n.s4_btn{\r\n  position: absolute;\r\n  width: 55px;\r\n  height: 52px;\r\n  bottom:131px;\r\n  right: 340px;\r\n  z-index: 2100;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.s4_emailBtn{\r\n  position: absolute;\r\n  width: 100px;\r\n  height:50px;\r\n  border-radius: 25px;\r\n  z-index: 1200;\r\n  top: 152px;\r\n  left: 780px;\r\n  cursor: pointer;\r\n}\r\n\r\n.s4_cheerBtn{\r\n  position: absolute;\r\n  z-index: 1200;\r\n  width: 30%;\r\n  bottom: 115px;\r\n  left: 280px;\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease; /* 부드러운 효과를 위한 전환 */\r\n}\r\n\r\n#s4_letterPopup{\r\n  position: absolute;\r\n  left: 45%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 1600px;\r\n  height: 900px;\r\n  background: url('../assets/images/section4_arona4.jpg') no-repeat center center;\r\n  background-size: cover;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: black;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  z-index: 2000;\r\n  display: none;\r\n}\r\n\r\n.s4_cheerBtn:hover{\r\n  transform: scale(1.05); /* 이미지를 조금 확대 */\r\n  box-shadow: 0 0 20px 5px rgba(255, 255, 255, 0.75); /* 빛나는 효과 */\r\n}\r\n\r\n#s4_closeButton {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: none; /* 배경 없음 */\r\n  border: none; /* 테두리 없음 */\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: white; /* X의 색상 설정 */\r\n}\r\n\r\n.s4_raund{\r\n  position: absolute;\r\n  width: 80px;\r\n  z-index: 1200px;\r\n  right: 880px;\r\n  bottom:120px;\r\n}\r\n\r\n.s4_triangleMenu {\r\n  position: absolute;\r\n  width: 30px; /* 너비 */\r\n  height: 20px; /* 높이 */\r\n  background-color: black; /* 배경 색상 */\r\n  clip-path: polygon(50% 100%, 0% 0%, 100% 0%); /* 역삼각형 모양 */\r\n  right: 840px; /* 오른쪽에서의 위치 조정 */\r\n  bottom: 145px; /* 아래에서의 위치 조정 */\r\n  z-index: 1200; /* z-index로 레이어 순서 조정 */\r\n  cursor: pointer;\r\n}\r\n\r\n.s4emailMsg {\r\n  display: none;\r\n  position: absolute;\r\n  left: 260px;\r\n  top: 200px;\r\n  color : #007bff;\r\n  z-index: 1500;\r\n}\r\n\r\n.imageSelector {\r\n  position: absolute;\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  gap: 10px;\r\n  z-index: 2500;\r\n  right: 780px;\r\n  bottom: 1px;\r\n}\r\n\r\n.imageSelector img {\r\n  width: 100px; /* 이미지 크기를 조정합니다. 상황에 맞게 조정해주세요. */\r\n  margin: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n#s4_openLetterImg{\r\n  position:absolute;\r\n  z-index: 2000;\r\n}\r\n\r\n/* 응원 메시지 스타일 */\r\n.s4_message-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.s4_message-image {\r\n  width: 80px;\r\n  height: 60px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.s4_message-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.s4_message-text {\r\n  margin: 0;\r\n}\r\n\r\n.s4_message-date {\r\n  margin: 0;\r\n}\r\n\r\n.s4_comment-form{\r\n  position:absolute;\r\n  margin-top: 20px;\r\n  width: 700px;\r\n  height:600px;\r\n  left:930px;\r\n  bottom:215px;\r\n  overflow-y: auto; /* 수직 스크롤만 표시 */\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}