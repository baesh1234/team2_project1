{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/images/section2Title.png';\nimport _imports_1 from '../assets/images/section2Subbg.png';\nimport _imports_2 from '../assets/images/s2submitButton.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4c0dbf9d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"section s2\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"titleImg\",\n  class: \"titleImg\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"초대장\",\n  class: \"subBg\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  id: \"section2Form\",\n  class: \"row g-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"인증메일보내기\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"container s2checkContainer\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"아래 내용을 확인하였으며,모두 동의 합니다.\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  alt: \"submitBtnImg\",\n  class: \"s2submitBtn\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_13 = [_hoisted_12];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.sendEmail && $options.sendEmail(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.to = $event),\n    placeholder: \"Enter your email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.to]]), _hoisted_5], 32 /* NEED_HYDRATION */)]), $data.s2message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.s2message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"agreeall\",\n    value: \"selectall\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.s2selectAllCheckbox($event))\n  }), _createTextVNode(), _hoisted_8, _hoisted_9, _createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"agree\",\n    value: \"age\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.s2uncheckSelectAll() || $options.s2checkSelectAll())\n  }), _createTextVNode(\" 만 14세 이상입니다. \"), _hoisted_10, _createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"agree\",\n    value: \"personalInfo\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.s2uncheckSelectAll() || $options.s2checkSelectAll())\n  }), _createTextVNode(\" 개인정보 수집 및 이용 동의 \"), _hoisted_11, _createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"agree\",\n    value: \"eventAgree\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.s2uncheckSelectAll() || $options.s2checkSelectAll())\n  }), _createTextVNode(\" 이벤트 등 프로모션 알림 수신 동의 \")]), _createElementVNode(\"a\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.s2AlertBtn())\n  }, [..._hoisted_13])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","src","alt","id","key","_hoisted_12","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","sendEmail","type","$event","$data","to","placeholder","required","_hoisted_5","s2message","_hoisted_6","_toDisplayString","_createCommentVNode","_hoisted_7","name","value","onClick","s2selectAllCheckbox","_createTextVNode","_hoisted_8","_hoisted_9","s2uncheckSelectAll","s2checkSelectAll","_hoisted_10","_hoisted_11","s2AlertBtn","_hoisted_13"],"sources":["C:\\git\\teamproject1\\vue-app\\src\\components\\Section2.vue"],"sourcesContent":["<template>\r\n  <div class=\"section s2\">\r\n    <img  src=\"../assets/images/section2Title.png\" alt=\"titleImg\" class=\"titleImg\">\r\n    <img src=\"../assets/images/section2Subbg.png\" alt=\"초대장\" class=\"subBg\">\r\n    <div  id=\"section2Form\" class=\"row g-3\">\r\n      <form @submit.prevent=\"sendEmail\">\r\n        <input type=\"email\" v-model=\"to\" placeholder=\"Enter your email\" required />\r\n        <button>인증메일보내기</button>\r\n      </form>\r\n    </div>\r\n    <p v-if=\"s2message\">{{ s2message }}</p>\r\n    <div class=\"container s2checkContainer\">\r\n      <input type='checkbox'\r\n             name='agreeall'\r\n             value='selectall'\r\n             @click='s2selectAllCheckbox($event)'/> <b>아래 내용을 확인하였으며,모두 동의 합니다.</b>\r\n      <br />\r\n      <input type='checkbox'\r\n             name='agree'\r\n             value='age'\r\n             @click='s2uncheckSelectAll()||s2checkSelectAll()'/> 만 14세 이상입니다.\r\n      <br />\r\n      <input type='checkbox'\r\n             name='agree'\r\n             value='personalInfo'\r\n             @click='s2uncheckSelectAll()||s2checkSelectAll()'/> 개인정보 수집 및 이용 동의\r\n      <br />\r\n      <input type='checkbox'\r\n             name='agree'\r\n             value='eventAgree'\r\n             @click='s2uncheckSelectAll()||s2checkSelectAll()'/> 이벤트 등 프로모션 알림 수신 동의\r\n    </div>\r\n    <a @click='s2AlertBtn()'><img src=\"../assets/images/s2submitButton.png\" alt=\"submitBtnImg\" class=\"s2submitBtn\"></a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'Section2',\r\n  data() {\r\n    return {\r\n      to: '',\r\n      s2message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    /***Section2 function***/\r\n    getData() {\r\n      axios.post('http://localhost:8080/findAll')\r\n          .then((response) => {\r\n            console.log(response)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n    },\r\n    s2selectAllCheckbox(event) {\r\n      const checkboxes = document.querySelectorAll('input[name=\"agree\"]');\r\n      checkboxes.forEach((checkbox) => {\r\n        checkbox.checked = event.target.checked;\r\n      });\r\n    },\r\n    //모두 선택되었을때 개별체크박스가 해제되면 전체선택체크박스를 해제하는 함수\r\n    s2uncheckSelectAll() {\r\n      // 전체 선택 체크박스를 가져옵니다.\r\n      const selectAllCheckboxes = document.querySelectorAll('input[value=\"selectall\"]');\r\n      // 모든 전체 선택 체크박스에 대해 반복합니다.\r\n      selectAllCheckboxes.forEach((selectAllCheckbox) => {\r\n        // 만약 전체 선택 체크박스가 선택되어 있다면 실행합니다.\r\n        if (selectAllCheckbox.checked) {\r\n          // 모든 개별 체크박스를 가져옵니다.\r\n          const checkboxes = document.querySelectorAll('input[name=\"agree\"]');\r\n          let allChecked = true;\r\n          // 각 개별 체크박스를 확인하여 모두 선택되었는지 확인합니다.\r\n          checkboxes.forEach((checkbox) => {\r\n            if (!checkbox.checked) {\r\n              allChecked = false;\r\n            }\r\n          });\r\n          // 개별 체크박스 중 하나라도 선택되지 않은 경우 전체 선택 체크박스를 해제합니다.\r\n          if (!allChecked) {\r\n            selectAllCheckbox.checked = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //모든 개별 체크박스가 선택되었을 때 전체 선택 체크박스를 체크하는 함수\r\n    s2checkSelectAll() {\r\n      const selectAllCheckboxes = document.querySelectorAll('input[value=\"selectall\"]');\r\n      selectAllCheckboxes.forEach((selectAllCheckbox) => {\r\n        // 만약 전체 선택 박스가 체크 해제되어 있다면 실행합니다.\r\n        if (!selectAllCheckbox.checked) {\r\n          // 모든 개별 체크박스를 가져옵니다.\r\n          const checkboxes = document.querySelectorAll('input[name=\"agree\"]');\r\n          let allChecked = true;\r\n          // 모든 개별 체크박스에 대해 반복합니다.\r\n          checkboxes.forEach((checkbox) => {\r\n            // 만약 하나라도 체크되지 않은 상태라면 모든 체크박스가 선택되지 않은 것으로 표시합니다.\r\n            if (!checkbox.checked) {\r\n              allChecked = false;\r\n            }\r\n          });\r\n          // 모든 개별 체크박스가 선택되어 있다면 전체 선택 체크박스를 체크합니다.\r\n          if (allChecked) {\r\n            selectAllCheckbox.checked = true;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //이메일 인증 버튼\r\n    async sendEmail(){\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/sendEmail', {to: this.to});\r\n        this.s2message = '이메일이 성공적으로 전송 되었습니다.';\r\n      }catch (error) {\r\n        this.s2message = '이메일이 전송이 실패 했습니다.';\r\n      }\r\n    },\r\n    //사전예약 등록 버튼 alert 출력\r\n    s2AlertBtn(){\r\n      const emailMsg = document.querySelector('.s2emailMsg');\r\n      const emailVerified = emailMsg.style.display === 'block';\r\n      const selectAllCheckbox = document.querySelector('input[value=\"selectall\"]');\r\n      const allAgreed = selectAllCheckbox.checked;\r\n\r\n      if (emailVerified && allAgreed) {\r\n        // SweetAlert2로 'O' 알림을 출력하고, 확인 버튼을 누르면 다음 섹션으로 이동합니다.\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: '모든 조건이 충족되었습니다.',\r\n          showConfirmButton: true,\r\n        }).then(() => {\r\n          // alert의 확인버튼을 누를시 section3으로 이동\r\n          // section3으로 이동합니다.\r\n          fullpage_api.moveTo(4);\r\n          console.log('slide');\r\n        });\r\n      } else {\r\n        // SweetAlert2로 'X' 알림을 출력합니다.\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '이메일 인증이 완료되었고 모든 항목에 동의해야 합니다.',\r\n          showConfirmButton: false,\r\n          timer: 1500, // 1.5초 후에 자동으로 닫힙니다.\r\n        });\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/*Section2*/\r\n.titleImg {\r\n  position: absolute;\r\n  width: 40rem;\r\n  top: 3%;\r\n  left: 3%;\r\n  z-index: 1;\r\n}\r\n.subBg {\r\n  position: absolute;\r\n  width: 100rem;\r\n  z-index: 0;\r\n  top: 5rem;\r\n  left: 6rem;\r\n}\r\n#section2Form {\r\n  position: absolute;\r\n  left: 30rem;\r\n  top: 20rem;\r\n  z-index: 2;\r\n  flex-wrap: nowrap;\r\n  width : 50rem;\r\n}\r\n.s2submitBtn {\r\n  position: absolute;\r\n  z-index: 2;\r\n  width : 30rem;\r\n  bottom: 100px;\r\n  left: 650px;\r\n}\r\n.s2checkContainer {\r\n  position: absolute;\r\n  z-index: 2;\r\n  left: 470px;\r\n  top: 400px;\r\n}\r\n.s2emailMsg{\r\n  display: none;\r\n  position: absolute;\r\n  left: 480px;\r\n  top: 366px;\r\n  color : #007bff;\r\n}\r\n</style>"],"mappings":";OAEUA,UAAwC;OACzCC,UAAwC;OA6BfC,UAAyC;;;EA/BpEC,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA+E;EAAzEC,GAAwC,EAAxCL,UAAwC;EAACM,GAAG,EAAC,UAAU;EAACH,KAAK,EAAC;;gEACpEC,mBAAA,CAAsE;EAAjEC,GAAwC,EAAxCJ,UAAwC;EAACK,GAAG,EAAC,KAAK;EAACH,KAAK,EAAC;;;EACxDI,EAAE,EAAC,cAAc;EAACJ,KAAK,EAAC;;gEAG1BC,mBAAA,CAAwB,gBAAhB,SAAO;;EAPvBI,GAAA;AAAA;;EAWSL,KAAK,EAAC;AAA4B;gEAISC,mBAAA,CAA+B,WAA5B,0BAAwB;gEACzEA,mBAAA,CAAM;iEAKNA,mBAAA,CAAM;iEAKNA,mBAAA,CAAM;iEAMiBA,mBAAA,CAAsF;EAAjFC,GAAyC,EAAzCH,UAAyC;EAACI,GAAG,EAAC,cAAc;EAACH,KAAK,EAAC;;qBAAxEM,WAAsF,C;;uBA/BjHC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,UAA+E,EAC/EC,UAAsE,EACtET,mBAAA,CAKM,OALNU,UAKM,GAJJV,mBAAA,CAGO;IAHAW,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;sBAC9Bd,mBAAA,CAA2E;IAApEiB,IAAI,EAAC,OAAO;IAN3B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMqCC,KAAA,CAAAC,EAAE,GAAAF,MAAA;IAAEG,WAAW,EAAC,kBAAkB;IAACC,QAAQ,EAAR;iDAAnCH,KAAA,CAAAC,EAAE,E,GAC/BG,UAAwB,C,8BAGnBJ,KAAA,CAAAK,SAAS,I,cAAlBlB,mBAAA,CAAuC,KAV3CmB,UAAA,EAAAC,gBAAA,CAU2BP,KAAA,CAAAK,SAAS,oBAVpCG,mBAAA,gBAWI3B,mBAAA,CAoBM,OApBN4B,UAoBM,GAnBJ5B,mBAAA,CAG6C;IAHtCiB,IAAI,EAAC,UAAU;IACfY,IAAI,EAAC,UAAU;IACfC,KAAK,EAAC,WAAW;IAChBC,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAiB,mBAAmB,CAACd,MAAM;MAf/Ce,gBAAA,IAeoDC,UAA+B,EAC7EC,UAAM,EACNnC,mBAAA,CAG0D;IAHnDiB,IAAI,EAAC,UAAU;IACfY,IAAI,EAAC,OAAO;IACZC,KAAK,EAAC,KAAK;IACVC,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAqB,kBAAkB,MAAIrB,QAAA,CAAAsB,gBAAgB;MApB3DJ,gBAAA,CAoBgE,gBAC1D,GAAAK,WAAM,EACNtC,mBAAA,CAG0D;IAHnDiB,IAAI,EAAC,UAAU;IACfY,IAAI,EAAC,OAAO;IACZC,KAAK,EAAC,cAAc;IACnBC,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAqB,kBAAkB,MAAIrB,QAAA,CAAAsB,gBAAgB;MAzB3DJ,gBAAA,CAyBgE,mBAC1D,GAAAM,WAAM,EACNvC,mBAAA,CAG0D;IAHnDiB,IAAI,EAAC,UAAU;IACfY,IAAI,EAAC,OAAO;IACZC,KAAK,EAAC,YAAY;IACjBC,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAqB,kBAAkB,MAAIrB,QAAA,CAAAsB,gBAAgB;MA9B3DJ,gBAAA,CA8BgE,uBAC5D,E,GACAjC,mBAAA,CAAmH;IAA/G+B,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEH,QAAA,CAAAyB,UAAU;KAhCzB,IAAAC,WAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}